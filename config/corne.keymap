/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define GAME    1
#define SYMBOL  2
#define GAME_SYMBOL  3
#define FN      4

/ {
    behaviors {
        backspace: backspace_ctrl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mt LCTRL BACKSPACE>, <&kp BACKSPACE>;
            mods = <(MOD_LCTL)>;
        };
        comma: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LT>;
            mods = <(MOD_LSFT)>;
        };
        dot: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp GT>;
            mods = <(MOD_LSFT)>;
        };
        qoutes: sqt_dqt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp AT>;
            mods = <(MOD_LSFT)>;
        };
        symbols: symbol_bspc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mo SYMBOL>, <&kp BSPC>;
            mods = <(MOD_LSFT)>;
        };
        narrow: n_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp LEFT>;
            mods = <(MOD_LCTL)>;
        };
        errow: e_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp DOWN>;
            mods = <(MOD_LCTL)>;
        };
        rrrow: r_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp R>, <&kp UP>;
            mods = <(MOD_LCTL)>;
        };
        orrow: o_right {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp RIGHT>;
            mods = <(MOD_LCTL)>;
        };
        hhome: h_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp HOME>;
            mods = <(MOD_LCTL)>;
        };
        ender: enter_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RET>, <&kp END>;
            mods = <(MOD_LCTL)>;
        };
        super: lgui_alt_FN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LGUI>, <&mo FN>;
            mods = <(MOD_LALT)>;
        };
        gamesuper: mtsuper_ESC {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mt LGUI ESC>, <&mo FN>;
            mods = <(MOD_LALT)>;
        };
        alt: alt_lgui_FN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LALT>, <&mo FN>;
            mods = <(MOD_LGUI)>;
        };
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };
        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB        |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  | '/"  |   Å   |
// | ESC        |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  | ENTER |
// | BACKDELETE |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   | ,/; | ./:  |  Æ  |   Ø   |
//                   | SUPER | SPACE | SYMBOL |   | SHIFT | CTRL | ALT |
                        display-name = "Base";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp G   &kp J &kp L  &kp U     &kp Y   &qoutes    &kp LEFT_BRACKET
   &kp ESC &kp A &kp I &kp S &kp T &kp D   &hhome &narrow  &errow     &rrrow   &orrow &ender
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp K &kp M  &comma &dot &kp SEMI &kp APOS
                   &super &symbols &kp SPACE   &kp LSHFT &backspace &alt
                        >;
                };
                game_layer {
                        display-name = "Game";
                        bindings = <
   &alt      &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
   &kp LSHFT &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
   &trans    &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
     &gamesuper &lt GAME_SYMBOL TAB &trans   &trans &trans &trans
                        >;
                };
                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  <  |  >  |  4  |  5  |  6  |  ?  |   |  |  |  [  |  ]  |  *  |  `  |  ^  |
// |  =  |  0  |  1  |  2  |  3  |  _  |   |  -  |  (  |  )  |  {  |  }  |  +  |
// |  %  |  &  |  7  |  8  |  9  |  #  |   |  @  |  \  |  /  |  !  |  ~  |  $  |
//                    |blank| HELD | BLANK |   | SPACE | CTRL | ALT |
// |[]{}@\~$
                        display-name = "Symbol";
                        bindings = <
   &kp NUBS    &kp LS(NUBS)   &kp N4 &kp N5 &kp N6 &kp UNDER    &kp RA(EQUAL)  &kp RA(N8) &kp RA(N9) &kp PIPE  &kp PLUS &kp RBRC
   &kp RPAR &kp N0   &kp N1 &kp N2 &kp N3 &kp QMARK    &kp FSLH &kp STAR &kp LPAR &kp RA(N7)  &kp RA(N0)  &kp MINUS
   &kp PRCNT &kp CARET &kp N7 &kp N8 &kp N9 &kp HASH     &kp RA(N2)    &kp RA(NUBS) &kp AMPS &kp EXCL  &kp RA(RBKT) &kp RA(N4)
                          	&none &trans &none            &kp SPACE &kp DEL &kp LCTRL
                        >;
                };
                game_symbol_layer {
// -----------------------------------------------------------------------------------------
// |  <  |  >  |  4  |  5  |  6  |  ?  |   |  |  |  [  |  ]  |  *  |  `  |  ^  |
// |  =  |  0  |  1  |  2  |  3  |  _  |   |  -  |  (  |  )  |  {  |  }  |  +  |
// |  %  |  &  |  7  |  8  |  9  |  #  |   |  @  |  \  |  /  |  !  |  ~  |  $  |
//                    |blank| HELD | BLANK |   | SPACE | CTRL | ALT |
// |[]{}@\~$
                        display-name = "G-Symbol";
                        bindings = <
   &alt    &kp H   &kp N4 &kp N5 &kp N6 &kp N    &kp RA(EQUAL)  &kp RA(N8) &kp RA(N9) &kp PIPE  &kp PLUS &kp RBRC
   &kp LCTRL &kp N0   &kp N1 &kp N2 &kp N3 &kp E    &kp FSLH &kp STAR &kp LPAR &kp RA(N7)  &kp RA(N0)  &kp MINUS
   &kp LSHFT &kp R &kp N7 &kp N8 &kp N9 &kp O     &kp RA(N2)    &kp RA(NUBS) &kp AMPS &kp EXCL  &kp RA(RBKT) &kp RA(N4)
                          	&none &trans &none            &kp SPACE &kp DEL &kp LCTRL
                        >;
                };
                fn_layer {
                        display-name = "FN";
                        bindings = <
    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6     &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
    &kp F13 &kp F14 &kp F15 &kp F16 &kp F17 &kp F18    &kp F19 &kp F20 &kp F21 &kp F22 &kp F23 &kp F24
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &tog_off GAME &tog_on GAME &none &none &none &none
                    	     &trans &none   &none   &none   &none    &trans
                        >;
                };



                extra_2 {
                        status = "reserved";
                };
        };
};
